{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-car/add-car.component.css","webpack:///./src/app/add-car/add-car.component.html","webpack:///./src/app/add-car/add-car.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/cap-add/cap-add.component.css","webpack:///./src/app/cap-add/cap-add.component.html","webpack:///./src/app/cap-add/cap-add.component.ts","webpack:///./src/app/cap/cap.component.css","webpack:///./src/app/cap/cap.component.html","webpack:///./src/app/cap/cap.component.ts","webpack:///./src/app/caps.service.ts","webpack:///./src/app/car-page/car-page.component.css","webpack:///./src/app/car-page/car-page.component.html","webpack:///./src/app/car-page/car-page.component.ts","webpack:///./src/app/car/car.component.css","webpack:///./src/app/car/car.component.html","webpack:///./src/app/car/car.component.ts","webpack:///./src/app/cars-b3/cars-b3.component.css","webpack:///./src/app/cars-b3/cars-b3.component.html","webpack:///./src/app/cars-b3/cars-b3.component.ts","webpack:///./src/app/cars-page/cars-page.component.css","webpack:///./src/app/cars-page/cars-page.component.html","webpack:///./src/app/cars-page/cars-page.component.ts","webpack:///./src/app/cars/cars.component.css","webpack:///./src/app/cars/cars.component.html","webpack:///./src/app/cars/cars.component.ts","webpack:///./src/app/console.service.ts","webpack:///./src/app/directives/background.directive.ts","webpack:///./src/app/form-react-test/form-react-test.component.css","webpack:///./src/app/form-react-test/form-react-test.component.html","webpack:///./src/app/form-react-test/form-react-test.component.ts","webpack:///./src/app/form-test/form-test.component.css","webpack:///./src/app/form-test/form-test.component.html","webpack:///./src/app/form-test/form-test.component.ts","webpack:///./src/app/home-page/home-page.component.css","webpack:///./src/app/home-page/home-page.component.html","webpack:///./src/app/home-page/home-page.component.ts","webpack:///./src/app/my-pipe/car-filter.pipe.ts","webpack:///./src/app/my-pipe/my-pipe.component.css","webpack:///./src/app/my-pipe/my-pipe.component.html","webpack:///./src/app/my-pipe/my-pipe.component.ts","webpack:///./src/app/my-pipe/pow.pipe.ts","webpack:///./src/app/new-page/new-page.component.css","webpack:///./src/app/new-page/new-page.component.html","webpack:///./src/app/new-page/new-page.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/pipes/pipes.component.css","webpack:///./src/app/pipes/pipes.component.html","webpack:///./src/app/pipes/pipes.component.ts","webpack:///./src/app/shared/color.directive.ts","webpack:///./src/app/teory-http/cars.service.ts","webpack:///./src/app/teory-http/teory-http.component.css","webpack:///./src/app/teory-http/teory-http.component.html","webpack:///./src/app/teory-http/teory-http.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carName\\\">-->\\n<input type=\\\"text\\\" class=\\\"form-control\\\" #carNameInput>\\n<input type=\\\"text\\\" class=\\\"form-control\\\" #carYearInput>\\n<!--<input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carYear\\\">-->\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"addCar(carNameInput)\\\">Add Car</button>\\n\"","import {\n  Component,\n  OnInit,\n  EventEmitter,\n  Output,\n  ViewChild,\n  ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-add-car',\n  templateUrl: './add-car.component.html',\n  styleUrls: ['./add-car.component.css']\n})\nexport class AddCarComponent implements OnInit {\n  // carName = '';\n  // carYear = 2017;\n  @Output('onAddCar') carEmiter = new EventEmitter<{name: string, year: number}>();\n  @ViewChild('carYearInput') carYearInput: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  addCar(carNameEl: HTMLInputElement) {\n    this.carEmiter.emit({\n      name: carNameEl.value,\n      year: +this.carYearInput.nativeElement.value\n      // name: this.carName,\n      // year: this.carYear\n    });\n\n    carNameEl.value = '';\n    this.carYearInput.nativeElement.value = 2017;\n    // this.carName = '';\n    // this.carYear = 2017;\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CarsPageComponent } from './cars-page/cars-page.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { CarPageComponent } from './car-page/car-page.component';\r\nimport {NotFoundComponent} from './not-found/not-found.component';\r\nimport {AuthGuard} from './auth-guard.service';\r\nimport {NewPageComponent} from './new-page/new-page.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'cars', component: CarsPageComponent, canActivate: [AuthGuard], children: [\r\n      { path: ':id/:name', component: CarPageComponent }\r\n    ] },\r\n  // { path: 'cars/:id/:name', component: CarPageComponent },\r\n  { path: '', component: HomePageComponent },\r\n  { path: 'new', component: NewPageComponent },\r\n  { path: 'not-found', component: NotFoundComponent },\r\n  { path: '**', redirectTo: '/not-found' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","module.exports = \".white-text {\\r\\n  color: #fff;\\r\\n}\\r\\n.active {\\r\\n  background-color: cornsilk;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container mb-5\\\">\\n  <h2 class=\\\"text-primary\\\">Роути і Модулі</h2>\\n  <nav style=\\\"margin-bottom: 20px;\\\" class=\\\"navbar navbar-brand\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <ul class=\\\"nav navbar-brand\\\">\\n        <li\\n          routerLinkActive=\\\"active p-2\\\"\\n          [routerLinkActiveOptions]=\\\"{exact: true}\\\"\\n        >\\n          <a routerLink=\\\"/\\\">Главная</a>\\n        </li>\\n        <li\\n          routerLinkActive=\\\"active p-2\\\"\\n        >\\n          <a [routerLink]=\\\"'/cars'\\\">Машины - \\\"Guard\\\"</a>\\n        </li>\\n        <li\\n          routerLinkActive=\\\"active p-2\\\"\\n        >\\n          <a [routerLink]=\\\"'/new'\\\">New</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-10 col-xs-offset-1\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\\n<hr>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row mb-5 pb-5\\\">\\n    <app-teory-http></app-teory-http>\\n  </div>\\n  <div class=\\\"row mb-5 pb-5\\\">\\n    <h2 class=\\\"text-primary\\\">R Form</h2>\\n    <app-form-react-test></app-form-react-test>\\n  </div>\\n  <div class=\\\"row mb-5 pb-5\\\">\\n    <h2 class=\\\"text-primary\\\">TD Form</h2>\\n    <app-form-test></app-form-test>\\n  </div>\\n\\n  <div class=\\\"row mb-5 pb-5\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <app-cap-add (onCapAdd)=\\\"addCapsToList($event)\\\"></app-cap-add>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <app-cap *ngFor=\\\"let cap of caps\\\" [cap]=\\\"cap\\\"></app-cap>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"row mb-5 pb-5\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <app-my-pipe>\\n        <h2 class=\\\" p-3 bg-warning text-primary text-center\\\"> Create Pipe</h2>\\n      </app-my-pipe>\\n      <app-pipes>\\n        <h2 class=\\\" p-3 bg-warning text-primary text-center\\\">Standart Pipes!</h2>\\n      </app-pipes>\\n    </div>\\n  </div>\\n  <div class=\\\"row mb-5 pb-5\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n\\n      <h2 [appBackground]=\\\"'orange'\\\" [defaultColor]=\\\"'blue'\\\" class=\\\"p-2 text-center\\\">{{ title }}</h2>\\n\\n      <ul class=\\\"list-group\\\">\\n        <li *ngFor=\\\"let item of items\\\" (click)=\\\"onClick(item)\\\" class=\\\"list-group-item\\\">\\n          {{ item }}\\n        </li>\\n      </ul>\\n\\n      <div [ngSwitch]=\\\"current\\\">\\n        <p *ngSwitchCase=\\\"1\\\">You CLick for 1</p>\\n        <p *ngSwitchCase=\\\"2\\\">You CLick for 2</p>\\n        <p *ngSwitchCase=\\\"3\\\">You CLick for 3</p>\\n        <p *ngSwitchCase=\\\"4\\\">You CLick for 4</p>\\n        <p *ngSwitchDefault>default</p>\\n      </div>\\n\\n\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2 class=\\\"m-3 text-primary\\\">Block 3 Передача параметров</h2>\\n      <app-cars-b3></app-cars-b3>\\n      <hr>\\n      <h2 class=\\\"m-3 text-primary\\\">Block 1 and 2</h2>\\n      <app-cars></app-cars>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Створення Директив';\n  items = [1, 2, 3, 4, 5];\n  current = 1;\n  caps = [\n    {\n      name: 'Ford',\n      isSold: false\n    },\n    {\n      name: 'Mazda',\n      isSold: true\n    },\n    {\n      name: 'Mercedes',\n      isSold: false\n    }\n  ];\n\n  addCapsToList(capName: string) {\n    this.caps.push({\n      name: capName,\n      isSold: false\n    });\n  }\n\n  onClick(number: number) {\n    this.current = number;\n  }\n\n  ngOnInit() {\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {Directive, NgModule} from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CarsComponent } from './cars/cars.component';\nimport { CarComponent } from './car/car.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CarsB3Component } from './cars-b3/cars-b3.component';\nimport { HttpModule } from '@angular/http';\nimport { AddCarComponent } from './add-car/add-car.component';\nimport { BackgroundDirective } from './directives/background.directive';\nimport { PipesComponent } from './pipes/pipes.component';\nimport { MyPipeComponent } from './my-pipe/my-pipe.component';\nimport { PowPipe } from './my-pipe/pow.pipe';\nimport { CarFilterPipe } from './my-pipe/car-filter.pipe';\nimport { CapAddComponent } from './cap-add/cap-add.component';\nimport { CapComponent } from './cap/cap.component';\nimport { FormTestComponent } from './form-test/form-test.component';\nimport { FormReactTestComponent } from './form-react-test/form-react-test.component';\nimport { TeoryHttpComponent } from './teory-http/teory-http.component';\nimport { CarsService } from './teory-http/cars.service';\nimport { CarsPageComponent } from './cars-page/cars-page.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { CapsService } from './caps.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CarPageComponent } from './car-page/car-page.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport {AuthService} from './auth.service';\nimport {AuthGuard} from './auth-guard.service';\nimport { NewPageComponent } from './new-page/new-page.component';\nimport {ColorDirective} from './shared/color.directive';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CarsComponent,\n    CarComponent,\n    CarsB3Component,\n    AddCarComponent,\n    BackgroundDirective,\n    PipesComponent,\n    MyPipeComponent,\n    PowPipe,\n    CarFilterPipe,\n    CapAddComponent,\n    CapComponent,\n    FormTestComponent,\n    FormReactTestComponent,\n    TeoryHttpComponent,\n    CarsPageComponent,\n    HomePageComponent,\n    CarPageComponent,\n    NotFoundComponent,\n    NewPageComponent,\n    ColorDirective\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    AppRoutingModule\n  ],\n  providers: [CarsService, CapsService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport construct = Reflect.construct;\r\nimport {AuthService} from './auth.service';\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private auth: AuthService) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n     return this.auth.isAuth().then((isLoggedIn: boolean) => {\r\n      if (isLoggedIn) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","export class AuthService {\r\n\r\n  isLoggedIn = false;\r\n\r\n  isAuth() {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve(this.isLoggedIn);\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  logIn() {\r\n    this.isLoggedIn = true;\r\n  }\r\n\r\n  logOut() {\r\n    this.isLoggedIn = false;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<input\\n  type=\\\"text\\\"\\n  [ngStyle]=\\\"{marginBottom: '10px'}\\\"\\n  class=\\\"form-control\\\"\\n  [(ngModel)]=\\\"capName\\\"\\n>\\n<button\\n  class=\\\"btn btn-primary\\\"\\n  (click)=\\\"addCap()\\\">Add cap!</button>\\n<hr>\\n\"","import {Component, OnInit, EventEmitter, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-cap-add',\n  templateUrl: './cap-add.component.html',\n  styleUrls: ['./cap-add.component.css']\n})\nexport class CapAddComponent implements OnInit {\n  @Output() onCapAdd = new EventEmitter<String>();\n  capName = '';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  addCap() {\n    this.onCapAdd.emit(this.capName);\n    this.capName = '';\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div [ngClass]=\\\"getClass()\\\">\\n  <h4 [ngStyle]=\\\"{marginBottom: '20px'}\\\">{{ cap.name }}</h4>\\n  <div>\\n    <button\\n      class=\\\"btn btn-xs btn-primary\\\"\\n      [disabled]=\\\"cap.isSold\\\"\\n      (click)=\\\"onAction('buy')\\\"\\n    >Buy Cap</button>\\n    <button\\n      class=\\\"btn ml-2 btn-sm btn-primary\\\"\\n      [disabled]=\\\"!cap.isSold\\\"\\n      (click)=\\\"onAction('return')\\\"\\n    >Return Cap</button>\\n  </div>\\n</div>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { ConsoleService } from '../console.service';\n\n@Component({\n  selector: 'app-cap',\n  templateUrl: './cap.component.html',\n  styleUrls: ['./cap.component.css'],\n  providers: [ConsoleService]\n})\nexport class CapComponent implements OnInit {\n  @Input() cap;\n\n  constructor(private consoleService: ConsoleService) { }\n\n  ngOnInit() {\n  }\n\n  getClass() {\n    return {\n      'list-group-item-success': !this.cap.isSold,\n      'list-group-item-danger': this.cap.isSold,\n      'list-group-item': true\n    };\n  }\n\n  onAction(type: string) {\n    this.cap.isSold = type === 'buy' ? true : false;\n    this.consoleService.log(`${this.cap.name} statue = ${type}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CapsService {\r\n  cars = [\r\n    {\r\n      name: 'Ford',\r\n      id: 1,\r\n      year: 2017,\r\n      color: 'red'\r\n    },\r\n    {\r\n      name: 'Audi',\r\n      id: 2,\r\n      year: 2010,\r\n      color: 'green'\r\n    },\r\n    {\r\n      name: 'BMW',\r\n      id: 3,\r\n      year: 2012,\r\n      color: 'orange'\r\n    },\r\n    {\r\n      name: 'Mercedes',\r\n      id: 4,\r\n      year: 2014,\r\n      color: 'grey'\r\n    }\r\n  ];\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>ID Car: {{ id }}</h2>\\n<h3>Name Car: {{ name }}</h3>\\n<h3>Color Car: {{ color }}</h3>\\n<h3>Year Car: {{ year }}</h3>\\n<p>{{ hash }}</p>\\n<hr>\\n\\n<h4>\\n  <a (click)=\\\"openMazdaPage()\\\">Open Mazda</a>\\n</h4>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Params, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-car-page',\n  templateUrl: './car-page.component.html',\n  styleUrls: ['./car-page.component.css']\n})\nexport class CarPageComponent implements OnInit {\n  id: number;\n  name: string;\n  year: string;\n  color: string;\n  hash: string;\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.id = +this.route.snapshot.params['id'];\n    this.name = this.route.snapshot.params['name'];\n    this.year = this.route.snapshot.queryParams['year'];\n    this.color = this.route.snapshot.queryParams['color'];\n    this.hash = this.route.snapshot.fragment;\n\n    this.route.params.subscribe((params: Params) => {\n      this.id = +params['id'];\n      this.name = params['name'];\n    });\n\n    this.route.queryParams.subscribe((params: Params) => {\n      this.color = params['color'];\n      this.year = params['year'];\n    });\n  }\n\n  openMazdaPage() {\n    this.router.navigate(['./cars', 8, 'Mazda'], {\n      queryParams: {\n        color: 'pink',\n        year: 1990\n      },\n      fragment: 'jaerbi'\n    });\n  }\n\n}\n","module.exports = \"div {\\r\\n  background: antiquewhite;\\r\\n}\\r\\nh3 {\\r\\n  color: green;\\r\\n}\\r\\np {\\r\\n  color: red;\\r\\n}\\r\\n\"","module.exports = \"<h3>Життєві Етапи</h3>\\n<div class=\\\"alert alert-info\\\">This car Sold. {{ name }}</div>\\n\\n<ng-content></ng-content>\\n\"","import {\n  Component,\n  Input,\n  ElementRef,\n  ContentChild,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  DoCheck,\n  AfterContentInit,\n  AfterContentChecked,\n  AfterViewInit,\n  AfterViewChecked,\n  OnDestroy\n} from '@angular/core';\n\n@Component({\n  selector: 'app-car',\n  templateUrl: './car.component.html',\n  styleUrls: ['./car.component.css']\n})\nexport class CarComponent implements\n  OnInit,\n  OnChanges,\n  DoCheck,\n  AfterContentInit,\n  AfterContentChecked,\n  AfterViewInit,\n  AfterViewChecked,\n  OnDestroy\n{\n  @Input('carItem') car: {name: string, year: number};\n  @Input() name: string;\n  @ContentChild('carHeading') carHeading: ElementRef;\n\n  constructor() {\n    // console.log('constructor');\n  }\n\n  ngOnInit() {\n    // console.log('ngOnInit');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // console.log('ngOnChanges', changes);\n  }\n\n  ngDoCheck() {\n    // console.log('ngDoCheck');\n  }\n\n  ngAfterContentInit() {\n    // console.log('ngAfterContentInit');\n  }\n\n  ngAfterContentChecked() {\n    // console.log('ngAfterContentChecked');\n  }\n\n  ngAfterViewInit() {\n    // console.log('ngAfterViewInit');\n  }\n\n  ngAfterViewChecked() {\n    // console.log('ngAfterViewChecked');\n  }\n\n  ngOnDestroy() {\n    // console.log('ngOnDestroy');\n  }\n\n}\n","module.exports = \"p {\\r\\n  font-size: 22px;\\r\\n}\\r\\n\"","module.exports = \"<p>Form added car \\\"encapsulation\\\"</p>\\n<hr>\\n<app-add-car (onAddCar)=\\\"updateCarList($event)\\\"></app-add-car>\\n<hr>\\n<button class=\\\"btn btn-success\\\" (click)=\\\"changeCarName()\\\">Changes Name Car</button>\\n<button class=\\\"btn btn-danger\\\" (click)=\\\"deleteCar()\\\">Delete Car</button>\\n<hr>\\n\\n<div class=\\\"list-group\\\">\\n  <app-car class=\\\"list-group-item\\\" *ngFor=\\\"let car of cars\\\" [carItem]=\\\"car\\\" [name]=\\\"car.name\\\">\\n    <h4 #carHeading class=\\\"list-group-item-heading\\\">Name: {{ car.name }}</h4>\\n    <p class=\\\"list-group-item-text\\\">Year: {{ car.year }}</p>\\n  </app-car>\\n</div>\\n\"","import {Component, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'app-cars-b3',\n  templateUrl: './cars-b3.component.html',\n  styleUrls: ['./cars-b3.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CarsB3Component {\n\n  cars: [{name: string, year: number}, {name: string, year: number}, {name: string, year: number}] = [\n    {\n      name: 'Ford',\n      year: 2015\n    },\n    {\n      name: 'Mazda',\n      year: 2010\n    },\n    {\n      name: 'Audi',\n      year: 2017\n    }\n  ];\n\n  constructor() { }\n\n  updateCarList(car: {name: string, year: number}) {\n    this.cars.push(car);\n  }\n\n  changeCarName() {\n    this.cars[0].name = 'New car Name!';\n  }\n\n  deleteCar() {\n    this.cars.splice(0, 1);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 appColor>Сторінка машин</h2>\\n<hr>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\" *ngFor=\\\"let car of cars\\\">\\n        <a\\n          [routerLink]=\\\"['/cars', car.id, car.name]\\\"\\n          [queryParams]=\\\"{year: car.year, color: car.color}\\\"\\n          fragment=\\\"jaerbi\\\"\\n        >\\n          {{ car.name }}\\n        </a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-xs-4 ml-4 text-info\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CapsService } from '../caps.service';\n\n@Component({\n  selector: 'app-cars-page',\n  templateUrl: './cars-page.component.html',\n  styleUrls: ['./cars-page.component.css']\n})\nexport class CarsPageComponent implements OnInit {\n  cars = [];\n\n  constructor(private carsService: CapsService) { }\n\n  ngOnInit() {\n    this.cars = this.carsService.cars;\n  }\n\n}\n","module.exports = \".block_lesson {\\r\\n  border: 1px solid black;\\r\\n  padding: 15px;\\r\\n  background: aliceblue;\\r\\n}\\r\\n.big_text {\\r\\n  font-size: 150%;\\r\\n}\\r\\n\"","module.exports = \"<!--Пайпи-->\\n<div class=\\\"block_lesson\\\">\\n  <h4 class=\\\"text-info\\\">Пайпи | Pipe</h4>\\n  <ul>\\n    <li *ngFor=\\\"let date of dates; let ind = index\\\">\\n      <!--<b>{{ ind + 1 }}</b> - {{ date | date: 'short' }}-->\\n      <!--<b>{{ ind + 1 }}</b> - {{ date | date: 'medium' }}-->\\n      <b>{{ ind + 1 }}</b> - {{ date | uppercase }}\\n    </li>\\n  </ul>\\n</div>\\n<hr>\\n<!--ngIf else-->\\n<div class=\\\"block_lesson\\\">\\n  <h4 class=\\\"text-info pb-2\\\">ngIf else [(ngModel)] ng-template></h4>\\n\\n  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"carName\\\">\\n  <button class=\\\"btn btn-primary m-2\\\" (click)=\\\"addCar()\\\" >Add Car</button>\\n  <p *ngIf=\\\"!addCarStatus; else successStatus\\\">Car not added</p>\\n  <ng-template #successStatus>\\n    <p>Car added!</p>\\n  </ng-template>\\n  <p>{{ carName }}</p>\\n\\n</div>\\n<hr>\\n<!--ngFor-->\\n<div class=\\\"block_lesson\\\">\\n  <h4 class=\\\"text-info pb-2\\\">ngFor</h4>\\n\\n  <!--<app-car *ngFor=\\\"let car of cars\\\"></app-car>-->\\n  <h6 class=\\\"text-success\\\">ngStyle and ngClass</h6>\\n  <ul>\\n    <li calss=\\\"m-2\\\" *ngFor=\\\"let car of cars; let i = index\\\">\\n      <div\\n        [ngStyle]=\\\"{backgroundColor: (i + 1) % 2 === 0 ? 'red' : 'orange', 'color': 'white' }\\\"\\n        [ngClass]=\\\"{'big_text': setBigCarText(car)}\\\"\\n      >\\n        <b>{{ i + 1 }}</b> - {{ car }}\\n      </div>\\n    </li>\\n  </ul>\\n  <h6 class=\\\"text-success\\\">ngFor</h6>\\n  <ul>\\n    <li *ngFor=\\\"let item of itemsTest; let idx = index\\\">\\n      <b>{{ idx + 1 }}</b> - <i>{{ item.name }}</i>\\n    </li>\\n  </ul>\\n</div>\\n<hr>\\n<!--ngModel-->\\n<div class=\\\"block_lesson\\\">\\n  <h4 class=\\\"text-info\\\">Введення тексту і добавлення його знизу</h4>\\n\\n  <p class=\\\"text-success\\\">Enter press</p>\\n  <input type=\\\"text\\\" class=\\\"form-control\\\" (keyup.enter)=\\\"onKeyUp($event)\\\">\\n\\n\\n  <!-- [] () -->\\n  <hr>\\n  <p class=\\\"text-success\\\">ngModel</p>\\n  <input [(ngModel)]=\\\"inputText\\\" [value]=\\\"inputText\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n\\n  <p class=\\\"text-secondary mt-2\\\">{{ inputText }}</p>\\n</div>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-cars',\n  templateUrl: './cars.component.html',\n  styleUrls: ['./cars.component.css']\n})\nexport class CarsComponent {\n  addCarStatus = false;\n  inputText = 'Default Text';\n  carName = '';\n  cars = ['Ford', 'Mazda', 'BMW', 'Ferrary', 'Audi', 'Tesla'];\n  itemsTest = [{id: 3, name: 'item 1'}, {id: 6, name: 'item 2'}, {id: 9, name: 'item 3'}];\n  dates = [\n    new Date(2015, 3, 4).toDateString(),\n    new Date(2011, 5, 6).toDateString(),\n    new Date(2016, 1, 7).toDateString(),\n    new Date(2010, 4, 11).toDateString()\n  ]\n\n  constructor() {\n  }\n\n  addCar() {\n    this.addCarStatus = true;\n    this.cars.push(this.carName);\n    this.carName = '';\n  }\n\n  onKeyUp (event) {\n    this.inputText = event.target.value;\n  }\n\n  setBigCarText(car: string) {\n    return car.length > 4 ? true : false;\n  }\n}\n","export class ConsoleService {\r\n\r\n  log(str: string) {\r\n    console.log(str);\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  HostListener,\r\n  OnInit,\r\n  Renderer2,\r\n  HostBinding,\r\n  Input\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appBackground]'\r\n})\r\n\r\nexport class BackgroundDirective implements OnInit {\r\n  @Input('appBackground') hoverColor: string = 'green';\r\n  @Input() defaultColor: string = 'transparent';\r\n  @HostBinding('style.backgroundColor') background: string;\r\n\r\n  constructor(private element: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngOnInit() {\r\n    this.background = this.defaultColor;\r\n    // this.element.nativeElement.style.backgroundColor = 'orange';\r\n  }\r\n\r\n  @HostListener('mouseenter') mouseEnter() {\r\n    // this.renderer.setStyle(this.element.nativeElement, 'background-color', 'orange');\r\n    this.background = this.hoverColor;\r\n    this.renderer.addClass(this.element.nativeElement, 'white-text');\r\n  }\r\n\r\n  @HostListener('mouseleave') mouseLeave() {\r\n    // this.renderer.setStyle(this.element.nativeElement, 'background-color', 'transparent');\r\n    this.background = this.defaultColor;\r\n    this.renderer.removeClass(this.element.nativeElement, 'white-text');\r\n  }\r\n}\r\n","module.exports = \".has-error>input {\\r\\n  border: 1px solid crimson;\\r\\n}\\r\\n.has-p-error {\\r\\n  color: crimson;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"col-md-12\\\">\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div formGroupName=\\\"user\\\">\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': form.get('user.email').invalid && form.get('user.email').touched}\\\">\\n        <label>Email</label>\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          formControlName=\\\"email\\\"\\n        >\\n        <p\\n          *ngIf=\\\"form.get('user.pass').invalid && form.get('user.pass').touched\\\"\\n        >\\n          <span *ngIf=\\\"form.get('user.email').errors['email']\\\">Почта має бути коректною</span>\\n          <span *ngIf=\\\"form.get('user.email').errors['emailIsUsed']\\\">Цей Email уже використовується</span>\\n        </p>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': form.get('user.pass').invalid && form.get('user.pass').touched}\\\">\\n        <label>Пароль</label>\\n        <input\\n          type=\\\"password\\\"\\n          class=\\\"form-control\\\"\\n          formControlName=\\\"pass\\\"\\n        >\\n        <p\\n          *ngIf=\\\"form.get('user.pass').invalid && form.get('user.pass').touched\\\"\\n        >\\n          <span *ngIf=\\\"form.get('user.pass').errors['required']\\\">Пароль не повинен бути порожнім</span>\\n          <span *ngIf=\\\"form.get('user.pass').errors['lengthError']\\\">Пароль не має бути меншим {{ charsCount }} символів</span>\\n        </p>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Выберите страну</label>\\n      <select class=\\\"form-control\\\" formControlName=\\\"country\\\">\\n        <option value=\\\"ua\\\">Украина</option>\\n        <option value=\\\"ru\\\">Россия</option>\\n        <option value=\\\"by\\\">Белоруссия</option>\\n      </select>\\n    </div>\\n    <div class=\\\"radio\\\" *ngFor=\\\"let ans of answers\\\">\\n      <label>\\n        <input\\n          type=\\\"radio\\\"\\n          name=\\\"answer\\\"\\n          [value]=\\\"ans.type\\\"\\n          formControlName=\\\"answer\\\"\\n        > {{ans.text}}\\n      </label>\\n    </div>\\n    <button\\n      class=\\\"btn btn-success\\\"\\n      type=\\\"submit\\\"\\n      [disabled]=\\\"form.invalid\\\"\\n    >Сохранить</button>\\n\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-form-react-test',\n  templateUrl: './form-react-test.component.html',\n  styleUrls: ['./form-react-test.component.css']\n})\nexport class FormReactTestComponent implements OnInit {\n  answers = [{\n    type: 'yes',\n    text: 'Да'\n  }, {\n    type: 'no',\n    text: 'Нет'\n  }];\n  form: FormGroup;\n  charsCount = 5;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      user: new FormGroup({\n        email: new FormControl('', [Validators.required, Validators.email], [this.checkFormEmail]),\n        pass: new FormControl('', [Validators.required, this.checkFormLength.bind(this)])\n      }),\n      country: new FormControl('ua'),\n      answer: new FormControl('no')\n    });\n  }\n\n  onSubmit() {\n    console.log('Submited!', this.form);\n  }\n\n  checkFormLength(control: FormControl) {\n    if (control.value.length <= this.charsCount) {\n      return {\n        'lengthError': true\n      };\n    }\n    return null;\n  }\n\n  checkFormEmail(control: FormControl): Promise<any> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (control.value === 'test@mail.ru') {\n          resolve({\n            'emailIsUsed': true\n          });\n        } else {\n          resolve(null);\n        }\n      }, 3000);\n    });\n  }\n\n}\n","module.exports = \".has-error {\\r\\n  border: 1px solid crimson;\\r\\n}\\r\\n.has-p-error {\\r\\n  color: crimson;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"col-md-12\\\">\\n  <form (ngSubmit)=\\\"submitForm(form)\\\" #form=\\\"ngForm\\\">\\n\\n    <div ngModelGroup=\\\"user\\\" #user=\\\"ngModelGroup\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Email</label>\\n        <input\\n          [ngClass]=\\\"{'has-error': email.invalid && email.touched}\\\"\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          ngModel\\n          name=\\\"email\\\"\\n          required\\n          email\\n          #email=\\\"ngModel\\\"\\n        >\\n        <p\\n          [ngClass]=\\\"{'has-p-error': email.invalid && email.touched}\\\"\\n          *ngIf=\\\"email.invalid && email.touched\\\"\\n        >Введіть коректний імейл</p>\\n        <button\\n          class=\\\"btn btn-primary\\\"\\n          (click)=\\\"addRandEmail()\\\"\\n          type=\\\"button\\\"\\n        >Add random email</button>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Пароль</label>\\n        <input\\n          [ngClass]=\\\"{'has-error': pass.invalid && pass.touched}\\\"\\n          type=\\\"password\\\"\\n          class=\\\"form-control\\\"\\n          ngModel\\n          name=\\\"pass\\\"\\n          required\\n          #pass=\\\"ngModel\\\"\\n        >\\n        <p\\n          *ngIf=\\\"pass.invalid && pass.touched\\\"\\n          [ngClass]=\\\"{'has-p-error': pass.invalid && pass.touched}\\\"\\n        >Пароль не повинен бути пустим</p>\\n      </div>\\n    </div>\\n    <p\\n      *ngIf=\\\"user.invalid && user.touched\\\"\\n      [ngClass]=\\\"{'has-p-error': user.invalid && user.touched}\\\"\\n    >Данны користувача введены не коректно</p>\\n\\n\\n    <div class=\\\"form-group\\\">\\n      <label>Выберите страну</label>\\n      <select\\n        class=\\\"form-control\\\"\\n        [ngModel]=\\\"defaultCountry\\\"\\n        name=\\\"country\\\"\\n        required\\n      >\\n        <option value=\\\"ua\\\">Украина</option>\\n        <option value=\\\"en\\\">Англія</option>\\n        <option value=\\\"us\\\">США</option>\\n      </select>\\n    </div>\\n    <div class=\\\"radio\\\" *ngFor=\\\"let ans of answers\\\">\\n      <label>\\n        <input\\n          type=\\\"radio\\\"\\n          [value]=\\\"ans.type\\\"\\n          [ngModel]=\\\"defaultAnswer\\\"\\n          name=\\\"answer\\\"\\n          required\\n        > {{ans.text}}\\n      </label>\\n    </div>\\n    <button\\n      class=\\\"btn btn-success\\\"\\n      type=\\\"submit\\\"\\n      [disabled]=\\\"!form.valid\\\"\\n    >Сохранить</button>\\n\\n  </form>\\n\\n  <div *ngIf=\\\"isSubmited\\\">\\n    <pre>\\n      {{ formData | json}}\\n    </pre>\\n  </div>\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-form-test',\n  templateUrl: './form-test.component.html',\n  styleUrls: ['./form-test.component.css']\n})\nexport class FormTestComponent implements OnInit {\n  @ViewChild('form') form: NgForm;\n\n  answers = [{\n    type: 'yes',\n    text: 'Так'\n  }, {\n    type: 'no',\n    text: 'Ні'\n  }];\n  defaultAnswer = 'no';\n  defaultCountry = 'ua';\n  formData = {};\n  isSubmited = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  addRandEmail() {\n    const randEmail = 'jrb@gmail.com';\n    this.form.form.patchValue({\n      user: {email: randEmail}\n    });\n  }\n\n  submitForm() {\n    this.isSubmited = true;\n    this.formData = this.form.value;\n    this.form.reset();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 appColor>Home PAGE</h2>\\n<hr>\\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid, beatae dicta est facere labore minima natus obcaecati perferendis porro possimus praesentium quaerat, quam repellat repellendus, sequi similique tempore veniam voluptas.</p>\\n<hr>\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"openCarsPage()\\\">Open page Cars</button>\\n<hr>\\n<button class=\\\"btn btn-success\\\" (click)=\\\"changeAuthStatus('login')\\\">Log IN</button>\\n<button class=\\\"btn btn-danger ml-2\\\" (click)=\\\"changeAuthStatus('logout')\\\">Log Out</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor(private auth: AuthService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n\n  openCarsPage() {\n    this.router.navigate(['cars'], {relativeTo: this.route});\n  }\n\n  changeAuthStatus(status: string) {\n    if (status === 'login') {\n      this.auth.logIn();\n    } else {\n      this.auth.logOut();\n    }\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'carFilter',\n  pure: true\n})\nexport class CarFilterPipe implements PipeTransform {\n\n  transform(carList, searchStr: string, fieldName: string) {\n    if (carList.length === 0 || searchStr === '') {\n      return carList;\n    }\n    return carList.filter(car => car[fieldName].toLowerCase().indexOf(searchStr.toLowerCase()) !== -1);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"p-4 mt-3\\\" style=\\\"background-color: lightcyan\\\">\\n  <h3 class=\\\"text-primary\\\">Search</h3>\\n  <input placeholder=\\\"Search of List\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchCar\\\">\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"addCar()\\\">Added</button>\\n  <hr>\\n  <ul class=\\\"list-group\\\">\\n    <li\\n      class=\\\"list-group-item\\\"\\n      *ngFor=\\\"let car of cars | carFilter:searchCar:'name'; let i = index\\\"\\n    ><b>{{ i + 1 }}</b> {{ car.name }} <i>{{ car.descr }}</i></li>\\n  </ul>\\n</div>\\n\\n<ng-content></ng-content>\\n\\n<div class=\\\"p-4\\\" style=\\\"background-color: lightcyan\\\">\\n  <h2 class=\\\"p-2 bg-secondary text-white\\\">{{ num }}</h2>\\n  <h2 class=\\\"p-2 bg-secondary text-white\\\">{{ num | appPow:3:'=' }}</h2>\\n  <h2 class=\\\"p-2 bg-secondary text-white\\\">{{ num | appPow:6:'=' }}</h2>\\n  <h2 class=\\\"p-2 bg-secondary text-white\\\">{{ 6 | appPow:3:'=' }}</h2>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-pipe',\n  templateUrl: './my-pipe.component.html',\n  styleUrls: ['./my-pipe.component.css']\n})\nexport class MyPipeComponent implements OnInit {\n  num = 2;\n  searchCar = '';\n  cars = [\n    {name: 'Ford', descr: 'WFM 1'},\n    {name: 'Mazda', descr: 'WFM 2'},\n    {name: 'Bently', descr: 'WFM 3'},\n    {name: 'Audi', descr: 'WFM 4'},\n    {name: 'Mercedes', descr: 'WFM 5'},\n    {name: 'BMW', descr: 'WFM 6'}\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  addCar() {\n    this.cars.push({\n      name: 'New Car',\n      descr: 'WFM'\n    });\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'appPow'\r\n})\r\nexport class PowPipe implements PipeTransform {\r\n  transform(value: any, powNumber: number = 1, symb: string) {\r\n    return value + '^' + powNumber + ' ' + symb + ' ' + Math.pow(value, powNumber);\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>New page is Working!!!</h1>\\n<hr>\\n<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus aperiam aspernatur eius error eum officiis, pariatur similique totam veritatis voluptatem!</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-new-page',\n  templateUrl: './new-page.component.html',\n  styleUrls: ['./new-page.component.css']\n})\nexport class NewPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"text-danger m-5\\\">\\n  Error 404!\\n</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ng-content></ng-content>\\n\\n<h2 class=\\\"p-2 bg-info text-white\\\">{{ name }}</h2>\\n<h2 class=\\\"p-2 bg-info text-white\\\">{{ name | lowercase }} - lowercase</h2>\\n<h2 class=\\\"p-2 bg-info text-white\\\">{{ name | uppercase }} - uppercase</h2>\\n<h2 class=\\\"p-2 bg-info text-white\\\">{{ name | slice:0:3 }} - slice:0:3</h2>\\n<h2 class=\\\"p-2 bg-info text-white\\\">{{ name | slice:3:6 | uppercase }} - slice:3:6 uppercase</h2>\\n<hr>\\n<h2 class=\\\"p-2 bg-warning text-dark\\\">{{ pi }}</h2>\\n<h2 class=\\\"p-2 bg-warning text-dark\\\">{{ pi | number }} - number</h2>\\n<h2 class=\\\"p-2 bg-warning text-dark\\\">{{ pi | number:'1.3-4' }} - number:'1.3-4'</h2>\\n<h2 class=\\\"p-2 bg-warning text-dark\\\">{{ pi | number:'2.2-2' }} - number:'2.2-2'</h2>\\n<h2 class=\\\"p-2 bg-warning text-dark\\\">{{ money | currency:'USD' }} - currency:'USD'</h2>\\n<h2 class=\\\"p-2 bg-warning text-dark\\\">{{ money | currency:'EUR':true }} - currency:'EUR':true</h2>\\n<hr>\\n<h2 class=\\\"p-2 bg-secondary text-white\\\">{{ date }}</h2>\\n<h2 class=\\\"p-2 bg-secondary text-white\\\">{{ date | date }} - date</h2>\\n<h2 class=\\\"p-2 bg-secondary text-white\\\">{{ date | date:'fullDate' }} - date:'fullDate'</h2>\\n<h2 class=\\\"p-2 bg-secondary text-white\\\">{{ date | date:'shortDate' }} - date:'shortDate'</h2>\\n<h2 class=\\\"p-2 bg-secondary text-white\\\">{{ date | date:'shortTime' }} - date:'shortTime'</h2>\\n<hr>\\n<h2 class=\\\"p-2 bg-success text-white\\\">{{ amout }}</h2>\\n<h2 class=\\\"p-2 bg-success text-white\\\">{{ amout | percent }} - percent</h2>\\n<hr>\\n<h2 class=\\\"p-2 bg-danger text-white\\\">{{ object }}</h2>\\n<h2 class=\\\"p-2 bg-danger text-white\\\"><pre>{{ object | json }}</pre> - json</h2>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pipes',\n  templateUrl: './pipes.component.html',\n  styleUrls: ['./pipes.component.css']\n})\nexport class PipesComponent implements OnInit {\n  name = 'WebFormMyself';\n  pi = Math.PI;\n  money = 350;\n  date = new Date();\n  amout = 0.45;\n  object = {\n    foo: 'bar',\n    baz: 'qux',\n    nested: {\n      xyz: 3,\n      numbers: [1, 2, 3]\n    }\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Directive, HostBinding, OnInit } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appColor]'\r\n})\r\nexport class ColorDirective implements OnInit {\r\n  @HostBinding('style.color') color = 'black';\r\n  ngOnInit() {\r\n    this.color = 'blue';\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class CarsService {\r\n  constructor(private http: Http) {}\r\n\r\n\r\n  getCars() {\r\n    const headers = new Headers({\r\n      'Content-Type': 'application/json; charset=utf8'\r\n    });\r\n    return this.http.get('http://localhost:3000/cars', {\r\n      headers: headers\r\n    });\r\n  }\r\n\r\n  addCar(carName: string) {\r\n    const data = {\r\n      name: carName,\r\n      color: 'crimson'\r\n    };\r\n    const headers = new Headers({\r\n      'Content-Type': 'application/json; charset=utf8'\r\n    });\r\n    return this.http.post('http://localhost:3000/cars', data, {\r\n      headers\r\n    });\r\n  }\r\n\r\n  changeColor(car: any, color: string) {\r\n    car.color = color;\r\n    return this.http.put(`http://localhost:3000/cars/${car.id}`, car);\r\n  }\r\n\r\n  deleteCar(car: any) {\r\n    return this.http.delete(`http://localhost:3000/cars/${car.id}`);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-xs-8 col-xs-offset-2\\\">\\n  <h2 class=\\\"text-primary mb-3\\\">Теорія HTTP</h2>\\n\\n\\n  <input\\n    type=\\\"text\\\"\\n    class=\\\"form-control\\\"\\n    [(ngModel)]=\\\"carName\\\"\\n    placeholder=\\\"Car Name: \\\"\\n  >\\n  <hr>\\n\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"loadCars()\\\">Загрузить машины</button>\\n  <button class=\\\"btn btn-primary ml-2\\\" (click)=\\\"addCar()\\\">Add Car</button>\\n  <hr>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let car of cars\\\">\\n      <span class=\\\"badge m-2\\\" style=\\\"font-size: 20px\\\" [ngStyle]=\\\"{background: car.color}\\\">\\n        {{car.id}}\\n      </span>\\n      {{car.name}}\\n      <button class=\\\"btn btn-info m-2\\\" (click)=\\\"setNewColor(car)\\\">Change Color</button>\\n      <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteCar(car)\\\">Delete</button>\\n    </li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CarsService } from './cars.service';\nimport { Response } from '@angular/http';\n\ninterface Car {\n  name: string;\n  color: string;\n  id: number;\n}\n\n@Component({\n  selector: 'app-teory-http',\n  templateUrl: './teory-http.component.html',\n  styleUrls: ['./teory-http.component.css']\n})\nexport class TeoryHttpComponent implements OnInit {\n  cars: Car[] = [];\n  carName = '';\n  colors = [\n    'orange',\n    'orangered',\n    'crimson',\n    'coral',\n    'aqua',\n    'aquamarine',\n    'cyan',\n    'grey'\n  ];\n  appTitle = '';\n\n  constructor(private carsService: CarsService) { }\n\n  ngOnInit() {\n  }\n\n  loadCars() {\n    this.carsService\n      .getCars()\n      .subscribe((response: Response) => {\n        const data = response.json();\n        this.cars = data;\n      });\n  }\n\n  addCar() {\n    this.carsService\n      .addCar(this.carName)\n      .subscribe((response: Response) => {\n        const car: Car = response.json();\n        this.cars.push(car);\n      });\n    this.carName = '';\n  }\n\n  getRandColor() {\n    const num = Math.round(Math.random() * (this.colors.length - 1));\n    return this.colors[num];\n  }\n\n  setNewColor(car: Car) {\n    this.carsService.changeColor(car, this.getRandColor())\n      .subscribe((data) => {\n        console.log(data.json());\n      });\n  }\n\n  deleteCar(car: Car) {\n    this.carsService.deleteCar(car)\n      .subscribe(() => {\n        this.cars = this.cars.filter(c => c.id !== car.id)\n      });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}